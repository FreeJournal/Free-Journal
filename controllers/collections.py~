import hashlib
from models.hash import Hash
from cache.cache import DBSession, Cache

class collections:

	def update_timestamp (collection):
		      timestamp_obj = TimestampFile(collection.merkle)
		      date_check = timestamp_obj.check_timestamp()
		      curr_time = date_check['time']
		      #split_time = curr_time[0:4]+" "+curr_time[5:7]+" "+curr_time[8:10]+" "+curr_time[11:13]+" "+curr_time[14:16]+" "+curr_time[17:19]
		      cmp_curr_time = time.strptime(curr_time, "%Y-%m-%d %H:%M:%S")
		      curr_txs= curr_time + ";" + date_check['Transaction']
		      if collection.oldest_date == None:
		          collection.oldest_date = cmp_curr_time
		          collection.oldest_btc_tx = curr_txs
		          collection.latest_btc_tx = curr_txs
		          return
		      split_time = collection.latest_btc_tx.split(";")
		      latest_time = split_time[0]
		      #latest_time_str = latest_time[0:4]+" "+latest_time[5:7]+" "+latest_time[8:10]+" "+latest_time[11:13]+" "+latest_time[14:16]+" "+latest_time[17:19]
		      cmp_latest = time.strptime(latest_time, "%Y-%m-%d %H:%M:%S")
		      if cmp_curr_time < collection.oldest_date:
		          collection.oldest_date = cmp_curr_time
		          collection.oldest_btc_tx = curr_txs
		      if cmp_curr_time > cmp_latest:
		          collection.latest_btc_tx = curr_txs

	def update_hash(collection):
		  string = ""
		  if collection is None:
		      return None
		  #check whether the version hashed already collection.version
		  previous_hash = collection.hashes.filter_by(collection_ver = collection.version).first()
		  if previous_hash is None:
		      for document in collection.documents:
		          string+=document.hash+"|"
		          if len(string) ==0:
		              return None
		      string = string[:-1]
		      h = hashlib.sha256()
		      h.update(string)
		      collection_hash = Hash(hash=h.hexdigest(), document_ids = string, collection_ver = collection.version)
		      session = DBSession.object_session(collection)
		session.add(collection_hash)
		      collection.hashes.append(collection_hash)
		      session.commit()
